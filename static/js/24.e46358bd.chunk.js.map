{"version":3,"sources":["../node_modules/@material-ui/core/esm/TableBody/TableBody.js","Components/Athan/Body.jsx"],"names":["tablelvl2","variant","defaultComponent","TableBody","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","Tablelvl2Context","Provider","value","_extends","clsx","root","role","withStyles","display","name","Body","data","toGetDay","Date","map","row","idx","TableRow","date","gregorian","day","getUTCDate","TableCell","scope","hijri","weekday","ar","timings","Fajr","slice","Sunrise","Dhuhr","Asr","Maghrib","Isha"],"mappings":"6JAaIA,EAAY,CACdC,QAAS,QAEPC,EAAmB,QACnBC,EAAyBC,cAAiB,SAAmBC,EAAOC,GACtE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8BP,EAAmBO,EAC7DG,EAAQC,YAAyBR,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBU,IAAiBC,SAAU,CACjEC,MAAOhB,GACOI,gBAAoBO,EAAWM,YAAS,CACtDT,UAAWU,YAAKX,EAAQY,KAAMX,GAC9BF,IAAKA,EACLc,KAAMT,IAAcT,EAAmB,KAAO,YAC7CU,QA2BUS,cAlDK,CAElBF,KAAM,CACJG,QAAS,oBA+CqB,CAChCC,KAAM,gBADOF,CAEZlB,G,yBCvBYqB,UAhCf,YAAyB,IAATC,EAAQ,EAARA,KACTC,EAAW,IAAIC,KACrB,OACC,cAAC,EAAD,UACEF,EAAKG,KAAI,SAACC,EAAKC,GAAN,OACT,eAACC,EAAA,EAAD,CAECvB,UACCqB,EAAIG,KAAKC,UAAUC,KAAOR,EAASS,aAAe,SAAW,GAH/D,UAMC,cAACC,EAAA,EAAD,CAAW1B,UAAU,KAAK2B,MAAM,MAAM7B,UAAU,MAAhD,SACEqB,EAAIG,KAAKM,MAAMC,QAAQC,KAEzB,eAACJ,EAAA,EAAD,CAAW5B,UAAU,mBAArB,UACC,cAAC4B,EAAA,EAAD,CAAW5B,UAAU,YAArB,SACEqB,EAAIG,KAAKC,UAAUC,MAErB,cAACE,EAAA,EAAD,CAAW5B,UAAU,YAArB,SAAkCqB,EAAIG,KAAKM,MAAMJ,SAElD,cAACE,EAAA,EAAD,UAAYP,EAAIY,QAAQC,KAAKC,MAAM,EAAG,KACtC,cAACP,EAAA,EAAD,UAAYP,EAAIY,QAAQG,QAAQD,MAAM,EAAG,KACzC,cAACP,EAAA,EAAD,UAAYP,EAAIY,QAAQI,MAAMF,MAAM,EAAG,KACvC,cAACP,EAAA,EAAD,UAAYP,EAAIY,QAAQK,IAAIH,MAAM,EAAG,KACrC,cAACP,EAAA,EAAD,UAAYP,EAAIY,QAAQM,QAAQJ,MAAM,EAAG,KACzC,cAACP,EAAA,EAAD,UAAYP,EAAIY,QAAQO,KAAKL,MAAM,EAAG,OAnBjCb","file":"static/js/24.e46358bd.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nfunction Body({ data }) {\r\n\tconst toGetDay = new Date();\r\n\treturn (\r\n\t\t<TableBody>\r\n\t\t\t{data.map((row, idx) => (\r\n\t\t\t\t<TableRow\r\n\t\t\t\t\tkey={idx}\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\trow.date.gregorian.day == toGetDay.getUTCDate() ? \"active\" : \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TableCell component=\"th\" scope=\"row\" className=\"day\">\r\n\t\t\t\t\t\t{row.date.hijri.weekday.ar}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell className=\"wrap-border flex\">\r\n\t\t\t\t\t\t<TableCell className=\"no-border\">\r\n\t\t\t\t\t\t\t{row.date.gregorian.day}\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t<TableCell className=\"no-border\">{row.date.hijri.day}</TableCell>\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t<TableCell>{row.timings.Fajr.slice(0, 5)}</TableCell>\r\n\t\t\t\t\t<TableCell>{row.timings.Sunrise.slice(0, 5)}</TableCell>\r\n\t\t\t\t\t<TableCell>{row.timings.Dhuhr.slice(0, 5)}</TableCell>\r\n\t\t\t\t\t<TableCell>{row.timings.Asr.slice(0, 5)}</TableCell>\r\n\t\t\t\t\t<TableCell>{row.timings.Maghrib.slice(0, 5)}</TableCell>\r\n\t\t\t\t\t<TableCell>{row.timings.Isha.slice(0, 5)}</TableCell>\r\n\t\t\t\t</TableRow>\r\n\t\t\t))}\r\n\t\t</TableBody>\r\n\t);\r\n}\r\n\r\nexport default Body;\r\n"],"sourceRoot":""}